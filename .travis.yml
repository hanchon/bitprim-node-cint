#
# Copyright (c) 2017-2018 Bitprim Inc.
#
# This file is part of Bitprim.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

branches:
  only:
  - master
  - dev
  - /^v\d+\.\d+\.\d+$/
  - feature-static-analysis
  
linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.6"
   services:
     - docker

osx: &osx
   os: osx
   language: generic


matrix:
   include:
      - <<: *linux
        env: PUSH_TO_REPOS=true

      # Linux, GCC, libstdc++ ------------------------------------------------------
      - <<: *linux
        env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
             BITPRIM_CI_CURRENCY=BCH
             BITPRIM_RUN_TESTS=true

      - <<: *linux
        env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
             BITPRIM_CI_CURRENCY=BTC
             BITPRIM_RUN_TESTS=true

      - <<: *linux
        env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7
             BITPRIM_CI_CURRENCY=BCH
             BITPRIM_RUN_TESTS=true

      - <<: *linux
        env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7
             BITPRIM_CI_CURRENCY=BTC
             BITPRIM_RUN_TESTS=true

      - <<: *linux
        env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc63
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc63
             BITPRIM_CI_CURRENCY=BTC

      - <<: *linux
        env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5
             BITPRIM_CI_CURRENCY=BTC

      - <<: *linux
        env: CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=lasote/conangcc49
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=lasote/conangcc49
             BITPRIM_CI_CURRENCY=BTC


      # Linux, Clang, libstdc++ ----------------------------------------------------
      - <<: *linux
        env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60
             BITPRIM_CI_CURRENCY=BTC

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=5.0 CONAN_DOCKER_IMAGE=lasote/conanclang50
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=5.0 CONAN_DOCKER_IMAGE=lasote/conanclang50
             BITPRIM_CI_CURRENCY=BTC

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=lasote/conanclang40
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=lasote/conanclang40
             BITPRIM_CI_CURRENCY=BTC

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=3.9 CONAN_DOCKER_IMAGE=lasote/conanclang39
             BITPRIM_CI_CURRENCY=BCH

      - <<: *linux
        env: CONAN_CLANG_VERSIONS=3.9 CONAN_DOCKER_IMAGE=lasote/conanclang39
             BITPRIM_CI_CURRENCY=BTC

      # macOS, apple-Clang, libc++ -------------------------------------------------
      # - <<: *osx
      #   osx_image: xcode9.1
      #   env: CONAN_APPLE_CLANG_VERSIONS=9.1
      #        BITPRIM_CI_CURRENCY=BCH

      # - <<: *osx
      #   osx_image: xcode9.1
      #   env: CONAN_APPLE_CLANG_VERSIONS=9.1
      #        BITPRIM_CI_CURRENCY=BTC


      - <<: *osx
        osx_image: xcode9
        env: CONAN_APPLE_CLANG_VERSIONS=9.0
             BITPRIM_RUN_TESTS=true
             BITPRIM_CI_CURRENCY=BCH
             BITPRIM_RUN_CLANG_TIDY=true

      - <<: *osx
        osx_image: xcode9
        env: CONAN_APPLE_CLANG_VERSIONS=9.0
             BITPRIM_RUN_TESTS=true
             BITPRIM_CI_CURRENCY=BCH

      - <<: *osx
        osx_image: xcode9
        env: CONAN_APPLE_CLANG_VERSIONS=9.0
             BITPRIM_RUN_TESTS=true
             BITPRIM_CI_CURRENCY=BTC

      - <<: *osx
        osx_image: xcode8.3
        env: CONAN_APPLE_CLANG_VERSIONS=8.1
             BITPRIM_CI_CURRENCY=BCH

      - <<: *osx
        osx_image: xcode8.3
        env: CONAN_APPLE_CLANG_VERSIONS=8.1
             BITPRIM_CI_CURRENCY=BTC

      - <<: *osx
        osx_image: xcode7.3
        env: CONAN_APPLE_CLANG_VERSIONS=7.3
             BITPRIM_CI_CURRENCY=BCH

      - <<: *osx
        osx_image: xcode7.3
        env: CONAN_APPLE_CLANG_VERSIONS=7.3
             BITPRIM_CI_CURRENCY=BTC

install:
  - cd ${TRAVIS_BUILD_DIR}

  - |
    if [[ "${PUSH_TO_REPOS}" != "true" ]]; then
      chmod +x .travis/install.sh
      ./.travis/install.sh
    fi    


  # - |
  #   if [[ "${BITPRIM_RUN_CLANG_TIDY}" == "true" ]]; then
  #     chmod +x .travis/install.sh
  #     ./.travis/install.sh

  #     # brew update || brew update
  #     # brew outdated pyenv || brew upgrade pyenv
  #     # brew install pyenv-virtualenv
  #     # brew install cmake || true

  #     # if which pyenv > /dev/null; then
  #     #     eval "$(pyenv init -)"
  #     # fi
  #     # # if which pyenv > /dev/null; then
  #     # #     eval "$(pyenv init -)"
  #     # #     eval "$(pyenv virtualenv-init -)" 
  #     # # fi

  #     # pyenv install 2.7.10
  #     # pyenv virtualenv 2.7.10 conan
  #     # pyenv rehash
  #     # pyenv activate conan      
  #     # pip install conan_package_tools --upgrade
  #     # pip install conan --upgrade
  #     # conan user
  #   fi


  ############################################################################
  # Install tools to check for code formatting errors (run on OS X only)
  ############################################################################
  - |
    if [[ "${BITPRIM_RUN_CLANG_TIDY}" == "true" ]]; then
      brew upgrade pcre || brew install pcre || exit 1
      brew upgrade vera++ || brew install vera++ || exit 1
      brew upgrade llvm --with-clang --with-clang-extra-tools || brew install llvm --with-clang --with-clang-extra-tools || exit 1
      ls /usr/local/opt/llvm/bin | grep clang
    fi

script:
  - git fetch --unshallow || true
  - export BITPRIM_BUILD_NUMBER="$(git describe)"
  - echo "${BITPRIM_BUILD_NUMBER}"

  - |
    if [[ "${BITPRIM_RUN_CLANG_TIDY}" != "true" ]]; then
      if [[ "${PUSH_TO_REPOS}" == "true" ]]; then
        chmod +x .travis/push_other_repo.sh
        ./.travis/push_other_repo.sh
      else
        cd ${TRAVIS_BUILD_DIR}
        chmod +x .travis/run.sh
        ./.travis/run.sh
      fi  
    fi  

  - |
    if [[ "${BITPRIM_RUN_CLANG_TIDY}" == "true" ]]; then
      if which pyenv > /dev/null; then
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
      fi
      pyenv activate conan

      conan user
      conan remote add bitprim_temp https://api.bintray.com/conan/bitprim/bitprim


      cd ${TRAVIS_BUILD_DIR}
      mkdir build
      cd build

      conan install ..

      # cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS}
      # cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=Release

      export PATH=$PATH:/usr/local/opt/llvm/bin/
      clang-tidy --version

      # sudo find / -name "run-clang-tidy.py"
      # ls /usr/local/Cellar/llvm/4.0.1/share/clang/run-clang-tidy.py

      # /usr/local/Cellar/llvm/5.0.0/share/clang/run-clang-tidy.py -header-filter='.*' -checks='-*,modernize-use-override'
      /usr/local/Cellar/llvm/5.0.0/share/clang/run-clang-tidy.py -header-filter='.*' -checks='*'

      # Find non-ASCII characters in headers
      hpps=$(find include doc -name \*\.hpp)
      cpps=$(find test example -name \*\.cpp)
      pcregrep --color='auto' -n "[\x80-\xFF]" ${hpps} ${cpps}
      if [[ $? -ne 1 ]]; then exit 1; fi
      # F001: Source files should not use the '\r' (CR) character
      # L001: No trailing whitespace at the end of lines
      # L002: Don't use tab characters
      find include -name \*\.hpp | vera++ --rule F001 --rule L001 --rule L002 --error
    fi

notifications:
  email: false
  webhooks:
    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always

